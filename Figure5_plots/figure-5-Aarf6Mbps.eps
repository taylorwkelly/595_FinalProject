%!PS-Adobe-2.0 EPSF-2.0
%%Title: figure-5-Aarf6Mbps.eps
%%Creator: gnuplot 5.2 patchlevel 8
%%CreationDate: Wed Dec  4 21:19:39 2024
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (figure-5-Aarf6Mbps.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 8)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Dec  4 21:19:39 2024)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-BoldItalic) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
602 448 M
63 0 V
6282 0 R
-63 0 V
stroke
518 448 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
602 943 M
63 0 V
6282 0 R
-63 0 V
stroke
518 943 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
602 1437 M
63 0 V
6282 0 R
-63 0 V
stroke
518 1437 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
602 1932 M
63 0 V
6282 0 R
-63 0 V
stroke
518 1932 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
602 2426 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2426 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
602 2921 M
63 0 V
6282 0 R
-63 0 V
stroke
518 2921 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 50)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
602 3415 M
63 0 V
6282 0 R
-63 0 V
stroke
518 3415 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
602 3910 M
63 0 V
6282 0 R
-63 0 V
stroke
518 3910 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 70)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
602 4404 M
63 0 V
6282 0 R
-63 0 V
stroke
518 4404 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 80)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
602 4899 M
63 0 V
6282 0 R
-63 0 V
stroke
518 4899 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 90)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
602 448 M
0 63 V
0 4388 R
0 -63 V
stroke
602 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1448 448 M
0 63 V
0 4388 R
0 -63 V
stroke
1448 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 22)]
] -46.7 MCshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2294 448 M
0 63 V
0 4388 R
0 -63 V
stroke
2294 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 24)]
] -46.7 MCshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3140 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3140 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 26)]
] -46.7 MCshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3986 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3986 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 28)]
] -46.7 MCshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4832 448 M
0 63 V
0 4388 R
0 -63 V
stroke
4832 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 30)]
] -46.7 MCshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5678 448 M
0 63 V
0 4388 R
0 -63 V
stroke
5678 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 32)]
] -46.7 MCshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6524 448 M
0 63 V
0 4388 R
0 -63 V
stroke
6524 308 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 ( 34)]
] -46.7 MCshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
602 4899 N
602 448 L
6345 0 V
0 4451 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
133 2673 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-BoldItalic) 140.0 0.0 true true 0 (Rate \(Mb/s\))]
] -46.7 MCshow
grestore
/Times-BoldItalic findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3774 98 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 (Time \(s\))]
] -46.7 MCshow
/Times-BoldItalic findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
LCb setrgbcolor
6296 4766 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 (MCS \(corresponding PHY rate\) selected by RAA)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
2717 2822 C15
2718 2228 C15
2720 1635 C15
2720 1338 C15
2723 1635 C15
2723 1338 C15
2728 1635 C15
2729 1338 C15
2744 1635 C15
2744 1338 C15
2777 1635 C15
2777 1338 C15
2807 1635 C15
2808 1338 C15
2824 1635 C15
2824 1338 C15
2841 1635 C15
2841 1338 C15
2871 1635 C15
2872 1338 C15
2888 1635 C15
2889 1338 C15
2905 1635 C15
2905 1338 C15
2921 1635 C15
2922 1338 C15
2938 1635 C15
2938 1338 C15
2959 1635 C15
2959 1338 C15
2989 1635 C15
2989 1338 C15
3006 1635 C15
3006 1338 C15
3022 1635 C15
3023 1338 C15
3039 1635 C15
3039 1338 C15
3056 1635 C15
3056 1338 C15
3072 1635 C15
3073 1338 C15
3089 1635 C15
3089 1338 C15
3105 1635 C15
3106 1338 C15
3122 1635 C15
3122 1338 C15
3148 1635 C15
3148 1338 C15
3165 1635 C15
3165 1338 C15
3181 1635 C15
3182 1338 C15
3200 1635 C15
3200 1338 C15
3219 1635 C15
3219 1338 C15
3267 1635 C15
3268 1338 C15
3277 1041 C15
3280 1338 C15
3283 1635 C15
3283 1338 C15
3289 1635 C15
3289 1338 C15
3300 1635 C15
3300 1338 C15
3317 1635 C15
3317 1338 C15
3338 1635 C15
3339 1338 C15
3361 1635 C15
3361 1338 C15
3435 1635 C15
3435 1338 C15
3452 1635 C15
3452 1338 C15
3474 1635 C15
3474 1338 C15
3491 1635 C15
3491 1338 C15
3521 1635 C15
3521 1338 C15
3538 1635 C15
3538 1338 C15
3554 1635 C15
3555 1338 C15
3571 1635 C15
3571 1338 C15
3590 1635 C15
3590 1338 C15
3611 1635 C15
3611 1338 C15
3643 1635 C15
3643 1338 C15
3669 1635 C15
3669 1338 C15
3694 1635 C15
3694 1338 C15
3711 1635 C15
3711 1338 C15
3736 1635 C15
3736 1338 C15
3755 1635 C15
3755 1338 C15
3772 1635 C15
3772 1338 C15
3788 1635 C15
3789 1338 C15
3805 1635 C15
3805 1338 C15
3831 1635 C15
3831 1338 C15
3873 1635 C15
3873 1338 C15
3889 1635 C15
3889 1338 C15
3923 1635 C15
3923 1338 C15
3940 1635 C15
3940 1338 C15
3956 1635 C15
3956 1338 C15
3976 1635 C15
3976 1338 C15
4007 1635 C15
4008 1338 C15
4026 1635 C15
4026 1338 C15
4066 1635 C15
4066 1338 C15
4094 1635 C15
4095 1338 C15
4126 1635 C15
4126 1338 C15
4154 1635 C15
4154 1338 C15
4170 1635 C15
4171 1338 C15
4187 1635 C15
4187 1338 C15
4204 1635 C15
4204 1338 C15
4220 1635 C15
4220 1338 C15
4247 1635 C15
4248 1338 C15
4264 1635 C15
4264 1338 C15
4282 1635 C15
4282 1338 C15
4327 1635 C15
4328 1338 C15
4368 1635 C15
4369 1338 C15
4407 1635 C15
4407 1338 C15
4424 1635 C15
4424 1338 C15
4440 1635 C15
4441 1338 C15
4457 1635 C15
4457 1338 C15
4479 1635 C15
4479 1338 C15
4502 1635 C15
4503 1338 C15
4519 1635 C15
4519 1338 C15
4536 1635 C15
4536 1338 C15
4552 1635 C15
4552 1338 C15
4569 1635 C15
4569 1338 C15
4585 1635 C15
4585 1338 C15
4609 1635 C15
4610 1338 C15
4626 1635 C15
4627 1338 C15
4669 1635 C15
4669 1338 C15
4686 1635 C15
4686 1338 C15
4702 1635 C15
4703 1338 C15
4719 1635 C15
4719 1338 C15
4747 1635 C15
4748 1338 C15
4782 1635 C15
4782 1338 C15
4799 1635 C15
4799 1338 C15
4815 1635 C15
4815 1338 C15
4832 1635 C15
4832 1338 C15
4849 1635 C15
4849 1338 C15
4883 1635 C15
4884 1338 C15
4912 1635 C15
4912 1338 C15
4936 1635 C15
4936 1338 C15
4953 1635 C15
4953 1338 C15
5013 1635 C15
5013 1338 C15
5030 1635 C15
5031 1338 C15
5047 1635 C15
5047 1338 C15
5089 1635 C15
5089 1338 C15
5124 1635 C15
5124 1338 C15
5141 1635 C15
5141 1338 C15
5164 1635 C15
5164 1338 C15
5189 1635 C15
5189 1338 C15
5212 1635 C15
5212 1338 C15
5234 1635 C15
5234 1338 C15
5268 1635 C15
5268 1338 C15
5285 1635 C15
5285 1338 C15
5301 1635 C15
5302 1338 C15
5318 1635 C15
5319 1338 C15
5335 1635 C15
5335 1338 C15
5363 1635 C15
5363 1338 C15
5382 1635 C15
5382 1338 C15
5399 1635 C15
5399 1338 C15
5447 1635 C15
5448 1338 C15
5464 1635 C15
5464 1338 C15
5480 1635 C15
5481 1338 C15
5497 1635 C15
5498 1338 C15
5520 1635 C15
5520 1338 C15
5536 1635 C15
5537 1338 C15
5572 1635 C15
5572 1338 C15
5596 1635 C15
5596 1338 C15
5612 1635 C15
5613 1338 C15
5629 1635 C15
5629 1338 C15
5649 1635 C15
5649 1338 C15
5666 1635 C15
5666 1338 C15
5693 1635 C15
5693 1338 C15
5710 1635 C15
5710 1338 C15
5726 1635 C15
5726 1338 C15
5777 1635 C15
5777 1338 C15
5801 1635 C15
5801 1338 C15
5821 1635 C15
5822 1338 C15
5823 1041 C15
5827 1338 C15
5830 1635 C15
5830 1338 C15
5838 1635 C15
5839 1338 C15
5849 1635 C15
5850 1338 C15
5866 1635 C15
5866 1338 C15
5883 1635 C15
5883 1338 C15
5900 1635 C15
5900 1338 C15
5916 1635 C15
5916 1338 C15
5934 1635 C15
5935 1338 C15
5951 1635 C15
5951 1338 C15
5972 1635 C15
5972 1338 C15
5988 1635 C15
5989 1338 C15
6025 1635 C15
6025 1338 C15
6064 1635 C15
6065 1338 C15
6096 1635 C15
6096 1338 C15
6119 1635 C15
6119 1338 C15
6148 1635 C15
6149 1338 C15
6165 1635 C15
6165 1338 C15
6182 1635 C15
6182 1338 C15
6229 1635 C15
6229 1338 C15
6245 1635 C15
6245 1338 C15
6264 1635 C15
6264 1338 C15
6280 1635 C15
6281 1338 C15
6297 1635 C15
6297 1338 C15
6314 1635 C15
6314 1338 C15
6347 1635 C15
6348 1338 C15
6374 1635 C15
6374 1338 C15
6417 1635 C15
6417 1338 C15
6433 1635 C15
6434 1338 C15
6450 1635 C15
6451 1338 C15
6479 1635 C15
6479 1338 C15
6496 1635 C15
6497 1338 C15
6513 1635 C15
6513 1338 C15
6530 1635 C15
6530 1338 C15
6546 1635 C15
6546 1338 C15
6569 1635 C15
6569 1338 C15
6585 1635 C15
6585 1338 C15
6602 1635 C15
6602 1338 C15
6618 1635 C15
6618 1338 C15
6635 1635 C15
6635 1338 C15
6651 1635 C15
6651 1338 C15
6660 1041 C15
6664 1338 C15
6666 1635 C15
6667 1338 C15
6672 1635 C15
6672 1338 C15
6683 1635 C15
6684 1338 C15
6716 1635 C15
6717 1338 C15
6740 1635 C15
6740 1338 C15
6758 1635 C15
6758 1338 C15
6774 1635 C15
6775 1338 C15
6791 1635 C15
6791 1338 C15
6828 1635 C15
6829 1338 C15
6849 1635 C15
6849 1338 C15
6866 1635 C15
6866 1338 C15
6910 1635 C15
6910 1338 C15
6579 4766 C15
% End plot #1
% Begin plot #2
1.000 UL
LTb
LCb setrgbcolor
1.000 UP
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C
LCb setrgbcolor
6296 4626 M
[ [(Times-BoldItalic) 140.0 0.0 true true 0 (Link Layer Throughput at Receiver)]
] -46.7 MRshow
/Times-BoldItalic findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C
602 1689 C15
814 1692 C15
1025 1693 C15
1237 1689 C15
1448 1702 C15
1660 1696 C15
1871 1695 C15
2083 1695 C15
2294 1689 C15
2506 1695 C15
2717 1052 C15
2929 1062 C15
3140 1055 C15
3352 1061 C15
3563 1061 C15
3775 1058 C15
3986 1061 C15
4198 1061 C15
4409 1065 C15
4621 1065 C15
4832 1060 C15
5044 1056 C15
5255 1063 C15
5467 1059 C15
5678 1053 C15
5890 1061 C15
6101 1064 C15
6313 1058 C15
6524 1059 C15
6736 1061 C15
6947 1057 C15
6579 4626 C15
% End plot #3
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
602 4899 N
602 448 L
6345 0 V
0 4451 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-BoldItalic
